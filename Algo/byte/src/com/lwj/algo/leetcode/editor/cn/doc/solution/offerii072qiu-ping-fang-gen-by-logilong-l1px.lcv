### 暴力法

本题的解题思路, 其实很容易想到, 最简单的就是从头到尾进行搜索, 即 i 从 1 开始(若 x=0 直接返回即可 0), 不断判断 i^2 与 x 的关系:
* 如果 x/i == i , 则直接返回 i.
* 如果 x/i > i , 则 i++
* 如果 x/i < i , 则退出, 返回 i - 1

> 注意 : 不要使用乘法来判断, 会造成溢出,使用除法就可以解决这个问题, 同时还要注意, 除数不能为0, 这就是为什么 i 从 1 开始.

* java

```java
class Solution {
    public int mySqrt(int x) {
        if(x == 0) return 0;
        int i = 1;
        while(i <= x){
            if(x/i > i){
                i++;
            }else if(x/i < i){
                break;
            }else{
                return i;
            }
        }
        return  i-1;
    }
}
```

### 二分法

这种在有序数组中进行搜索, 肯定要想到二分法. 直接看代码吧, 代码中有详细的注释.

* java

```java
class Solution {
    public int mySqrt(int x){
        int left = 0, right = x;
        while (left < right){
            // 为了防止 mid 为 0 , 在后面加1
            int mid = left + (right - left) / 2 + 1;
            // 通过除法 x/mid 来判断比用乘法好, 乘法容易溢出
            if(x/mid >= mid){
                // 由于 x 的平方根是向下取整的, 所以当 x/mid >= mid, 也就是 mid^2 <= x, 
                // 有可能 mid 就是平方根, 所以 left = mid, 而不是 mid + 1
                left = mid;
            }else{
                right = mid - 1;
            }
        }
        return left;
    }
}
```

